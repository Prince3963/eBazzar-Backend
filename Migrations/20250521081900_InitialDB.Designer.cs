// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBazzar.DBcontext;

#nullable disable

namespace eBazzar.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250521081900_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eBazzar.Model.Category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("category_id"));

                    b.Property<string>("category_description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CategoryDescription");

                    b.Property<string>("category_name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CategoryName");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.HasKey("category_id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("eBazzar.Model.Discount", b =>
                {
                    b.Property<int>("discount_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("discount_id"));

                    b.Property<string>("Iamge")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DiscountIamge");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("discount_type")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("DiscountType");

                    b.Property<string>("expiration_time")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DiscountValidation");

                    b.Property<int?>("total_value")
                        .HasColumnType("int")
                        .HasColumnName("TotalValue");

                    b.Property<int?>("wishlist_id")
                        .HasColumnType("int");

                    b.Property<int?>("wishlist_id1")
                        .HasColumnType("int");

                    b.HasKey("discount_id");

                    b.HasIndex("wishlist_id1");

                    b.ToTable("discounts");
                });

            modelBuilder.Entity("eBazzar.Model.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("status")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("OrderStatus");

                    b.Property<string>("total_price")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TotalPrice");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("user_id1")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("user_id1");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("eBazzar.Model.OrderDetails", b =>
                {
                    b.Property<int>("orderDetaails_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderDetaails_id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("final_price")
                        .HasColumnType("int")
                        .HasColumnName("OrderFinalPrice");

                    b.Property<int?>("order_id")
                        .HasColumnType("int");

                    b.Property<int?>("order_id1")
                        .HasColumnType("int");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_id1")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int")
                        .HasColumnName("OrderQuantity");

                    b.HasKey("orderDetaails_id");

                    b.HasIndex("order_id1");

                    b.HasIndex("product_id1");

                    b.ToTable("orderDetails");
                });

            modelBuilder.Entity("eBazzar.Model.Payment", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("discount_id")
                        .HasColumnType("int");

                    b.Property<int?>("discount_id1")
                        .HasColumnType("int");

                    b.Property<int?>("order_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("payment_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("PaymentDate");

                    b.Property<string>("payment_method")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PaymentMethods");

                    b.Property<string>("payment_status")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("PaymentStatus");

                    b.Property<string>("payment_tarnsactionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PaymentTransaction");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("user_id1")
                        .HasColumnType("int");

                    b.HasKey("payment_id");

                    b.HasIndex("discount_id1");

                    b.HasIndex("user_id1");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("eBazzar.Model.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_id"));

                    b.Property<int?>("category_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("product_description")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ProductDescription");

                    b.Property<string>("product_image")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ProductImage");

                    b.Property<string>("product_isActive")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ProductisActive");

                    b.Property<string>("product_name")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ProductName");

                    b.Property<int?>("product_price")
                        .HasColumnType("int")
                        .HasColumnName("ProductPrice");

                    b.Property<string>("slug")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ProductSlug");

                    b.HasKey("product_id");

                    b.HasIndex("category_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("eBazzar.Model.Review", b =>
                {
                    b.Property<int>("review_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("review_id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_id1")
                        .HasColumnType("int");

                    b.Property<string>("review_rate")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ReviewRate");

                    b.Property<string>("review_text")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ReviewText");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("user_id1")
                        .HasColumnType("int");

                    b.HasKey("review_id");

                    b.HasIndex("product_id1");

                    b.HasIndex("user_id1");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("eBazzar.Model.Role", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("role")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Role");

                    b.HasKey("role_id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("eBazzar.Model.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UserEmail");

                    b.Property<string>("forgotPasswordToken")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("forgotPasswordToken");

                    b.Property<string>("mobile")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("UserMobile");

                    b.Property<string>("password")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("UserPassword");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("tokenExpirationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("tokanExpirationTime");

                    b.Property<string>("username")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserName");

                    b.HasKey("user_id");

                    b.HasIndex("product_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("eBazzar.Model.Wishlist", b =>
                {
                    b.Property<int>("wishlist_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wishlist_id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("user_id1")
                        .HasColumnType("int");

                    b.HasKey("wishlist_id");

                    b.HasIndex("user_id1");

                    b.ToTable("wishlists");
                });

            modelBuilder.Entity("eBazzar.Model.Discount", b =>
                {
                    b.HasOne("eBazzar.Model.Wishlist", null)
                        .WithMany("discounts")
                        .HasForeignKey("wishlist_id1");
                });

            modelBuilder.Entity("eBazzar.Model.Order", b =>
                {
                    b.HasOne("eBazzar.Model.User", null)
                        .WithMany("orders")
                        .HasForeignKey("user_id1");
                });

            modelBuilder.Entity("eBazzar.Model.OrderDetails", b =>
                {
                    b.HasOne("eBazzar.Model.Order", null)
                        .WithMany("orderDetails")
                        .HasForeignKey("order_id1");

                    b.HasOne("eBazzar.Model.Product", null)
                        .WithMany("orderDetails")
                        .HasForeignKey("product_id1");
                });

            modelBuilder.Entity("eBazzar.Model.Payment", b =>
                {
                    b.HasOne("eBazzar.Model.Discount", null)
                        .WithMany("payments")
                        .HasForeignKey("discount_id1");

                    b.HasOne("eBazzar.Model.User", null)
                        .WithMany("payments")
                        .HasForeignKey("user_id1");
                });

            modelBuilder.Entity("eBazzar.Model.Product", b =>
                {
                    b.HasOne("eBazzar.Model.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eBazzar.Model.Review", b =>
                {
                    b.HasOne("eBazzar.Model.Product", null)
                        .WithMany("reviews")
                        .HasForeignKey("product_id1");

                    b.HasOne("eBazzar.Model.User", null)
                        .WithMany("reviews")
                        .HasForeignKey("user_id1");
                });

            modelBuilder.Entity("eBazzar.Model.User", b =>
                {
                    b.HasOne("eBazzar.Model.Product", null)
                        .WithMany("users")
                        .HasForeignKey("product_id");
                });

            modelBuilder.Entity("eBazzar.Model.Wishlist", b =>
                {
                    b.HasOne("eBazzar.Model.User", null)
                        .WithMany("wishlists")
                        .HasForeignKey("user_id1");
                });

            modelBuilder.Entity("eBazzar.Model.Category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("eBazzar.Model.Discount", b =>
                {
                    b.Navigation("payments");
                });

            modelBuilder.Entity("eBazzar.Model.Order", b =>
                {
                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("eBazzar.Model.Product", b =>
                {
                    b.Navigation("orderDetails");

                    b.Navigation("reviews");

                    b.Navigation("users");
                });

            modelBuilder.Entity("eBazzar.Model.User", b =>
                {
                    b.Navigation("orders");

                    b.Navigation("payments");

                    b.Navigation("reviews");

                    b.Navigation("wishlists");
                });

            modelBuilder.Entity("eBazzar.Model.Wishlist", b =>
                {
                    b.Navigation("discounts");
                });
#pragma warning restore 612, 618
        }
    }
}
